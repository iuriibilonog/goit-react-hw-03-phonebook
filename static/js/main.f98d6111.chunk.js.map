{"version":3,"sources":["components/FilterField/FilterField.module.css","components/ContactsForm/ContactsForm.module.css","components/ContactsForm/ContactsForm.jsx","components/Contacts/Contacts.jsx","components/FilterField/FilterField.jsx","App.js","index.js","components/Contacts/Contacts.module.css","App.module.css"],"names":["module","exports","ContactsForm","state","name","number","handlerOnChange","e","target","value","setState","hendlerOnSubmit","preventDefault","props","addNewContact","reset","onSubmit","this","className","s","form","inputTitle","inputField","type","pattern","title","required","onChange","addContactBtn","Component","Contacts","contactsArr","deleteContact","contactsList","map","id","contactItem","contactsName","contactsNumber","delBtn","onClick","FilterField","filterTitle","filterInput","App","contacts","filter","contact","v4","item","toLowerCase","includes","alert","prevState","changeFilter","getFilteredContacts","NormalizeFilter","contactId","localContacts","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","filteredContacts","app","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,YAAc,iCAAiC,YAAc,mC,uCCA/ED,EAAOC,QAAU,CAAC,KAAO,2BAA2B,WAAa,iCAAiC,WAAa,iCAAiC,cAAgB,sC,sLCI1JC,E,4MAOJC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,gBAAkB,SAACC,GACjB,MAAuBA,EAAEC,OAAlBJ,EAAP,EAAOA,KAAMK,EAAb,EAAaA,MACb,EAAKC,SAAL,eAAgBN,EAAOK,K,EAGzBE,gBAAkB,SAACJ,GACjBA,EAAEK,iBACF,EAAKC,MAAMC,cAAX,eAA8B,EAAKX,QACnC,EAAKY,S,EAGPA,MAAQ,WACN,EAAKL,SAAS,CAACN,KAAM,GAAIC,OAAQ,M,4CAKnC,WACE,OACE,uBAAMW,SAAUC,KAAKN,gBAAiBO,UAAWC,IAAEC,KAAnD,UACE,wBAAOF,UAAWC,IAAEE,WAApB,kBACE,uBAAOH,UAAWC,IAAEG,WAClBC,KAAK,OACLd,MAAOQ,KAAKd,MAAMC,KAClBA,KAAK,OACLoB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUV,KAAKX,qBAInB,wBAAOY,UAAWC,IAAEE,WAApB,oBACE,uBAAOH,UAAWC,IAAEG,WAClBC,KAAK,MACLd,MAAOQ,KAAKd,MAAME,OAClBD,KAAK,SACLoB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUV,KAAKX,qBAInB,wBAAQY,UAAWC,IAAES,cAAeL,KAAK,SAAzC,gC,GAxDmBM,aA8DZ3B,I,gBCpCA4B,EA5BE,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,YAAaC,EAAoB,EAApBA,cAE/B,OACE,oBAAId,UAAWC,IAAEc,aAAjB,SACGF,EAAYG,KAAI,gBAAG9B,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQ8B,EAAjB,EAAiBA,GAAjB,OACf,qBAAajB,UAAWC,IAAEiB,YAA1B,UACE,oBAAGlB,UAAWC,IAAEkB,aAAhB,cAAgCjC,KADlC,MAC8C,mBAAGc,UAAWC,IAAEmB,eAAhB,SAAiCjC,IAC7E,wBAAQa,UAAWC,IAAEoB,OAAQC,QAAS,kBAAKR,EAAcG,IAAKZ,KAAK,SAAnE,sBAFOY,S,iBCQFM,EAbK,SAAC,GAAyB,IAAvBhC,EAAsB,EAAtBA,MAAOkB,EAAe,EAAfA,SAC5B,OACE,wBAAOT,UAAWC,IAAEuB,YAApB,mCACE,uBAAOxB,UAAWC,IAAEwB,YAAapB,KAAK,OAAOd,MAAOA,EAAOkB,SAAUA,QCErEiB,E,4MACJzC,MAAQ,CACN0C,SAAU,CACR,CAAEV,GAAI,OAAQ/B,KAAM,gBAAiBC,OAAQ,aAC7C,CAAE8B,GAAI,OAAQ/B,KAAM,iBAAkBC,OAAQ,aAC9C,CAAE8B,GAAI,OAAQ/B,KAAM,gBAAiBC,OAAQ,aAC7C,CAAE8B,GAAI,OAAQ/B,KAAM,iBAAkBC,OAAQ,cAEhDyC,OAAQ,I,EAiBVhC,cAAgB,YAAuB,IAApBV,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACjB0C,EAAU,CACdZ,GAAIa,cACJ5C,KAAMA,EACNC,OAAQA,GAGY,EAAKF,MAAM0C,SAASX,KAAI,SAACe,GAAD,OAC5CA,EAAK7C,KAAK8C,iBAGEC,SAASJ,EAAQ3C,KAAK8C,eAChCE,MAAM,GAAD,OAAIL,EAAQ3C,KAAZ,6BACL,EAAKM,UAAS,SAAC2C,GAAD,MAAgB,CAC5BR,SAAS,CAAEE,GAAH,mBAAeM,EAAUR,gB,EAIzCS,aAAe,SAAC/C,GACd,EAAKG,SAAS,CAAEoC,OAAQvC,EAAEC,OAAOC,S,EAGnC8C,oBAAsB,WACpB,IAAMC,EAAkB,EAAKrD,MAAM2C,OAAOI,cAE1C,OAAO,EAAK/C,MAAM0C,SAASC,QAAO,SAACC,GAAD,OAChCA,EAAQ3C,KAAK8C,cAAcC,SAASK,O,EAIxCxB,cAAgB,SAACyB,GACf,EAAK/C,UAAS,SAAC2C,GAAD,MAAgB,CAC5BR,SAAUQ,EAAUR,SAASC,QAC3B,SAACC,GAAD,OAAaA,EAAQZ,KAAOsB,U,uDA/ClC,WACE,IAAMC,EAAgBC,KAAKC,MAAMC,aAAaC,QAAQ,aAElDJ,GACFzC,KAAKP,SAAS,CAAEmC,SAAUa,M,gCAI9B,SAAmBK,EAAWV,GACxBA,EAAUR,WAAa5B,KAAKd,MAAM0C,UACpCgB,aAAaG,QAAQ,WAAYL,KAAKM,UAAUhD,KAAKd,MAAM0C,a,oBA0C/D,WACE,IAAMqB,EAAmBjD,KAAKsC,sBAC9B,OACE,sBAAKrC,UAAWC,IAAEgD,IAAlB,UACE,oBAAIjD,UAAWC,IAAEM,MAAjB,uBACA,cAAC,EAAD,CAAcX,cAAeG,KAAKH,gBAClC,oBAAII,UAAWC,IAAEM,MAAjB,sBACA,cAAC,EAAD,CAAahB,MAAOQ,KAAKd,MAAM2C,OAAQnB,SAAUV,KAAKqC,eACtD,cAAC,EAAD,CACEvB,YAAamC,EACblC,cAAef,KAAKe,uB,GAzEZH,aAgFHe,IClFfwB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BxE,EAAOC,QAAU,CAAC,YAAc,8BAA8B,aAAe,+BAA+B,eAAiB,iCAAiC,OAAS,2B,kBCAvKD,EAAOC,QAAU,CAAC,IAAM,iBAAiB,MAAQ,sB","file":"static/js/main.f98d6111.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterTitle\":\"FilterField_filterTitle__XNby7\",\"filterInput\":\"FilterField_filterInput__1u5s9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactsForm_form__1siAU\",\"inputTitle\":\"ContactsForm_inputTitle__3zH2k\",\"inputField\":\"ContactsForm_inputField__RpVz7\",\"addContactBtn\":\"ContactsForm_addContactBtn__3pzMZ\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactsForm.module.css'\n\n\nclass ContactsForm extends Component {\n\n  static propTypes = {\n    addNewContact: PropTypes.func.isRequired\n  }\n\n\n  state = {\n    name: '',\n    number: ''\n  }\n\n  handlerOnChange = (e) => {\n    const {name, value } = e.target\n    this.setState({[name]: value})\n  }\n\n  hendlerOnSubmit = (e) => {\n    e.preventDefault();\n    this.props.addNewContact({ ...this.state })\n    this.reset()\n  }\n\n  reset = () => {\n    this.setState({name: '', number: ''})\n  }\n\n\n\n  render() {\n    return (\n      <form onSubmit={this.hendlerOnSubmit} className={s.form}>\n        <label className={s.inputTitle}> Name\n          <input className={s.inputField}\n            type=\"text\"\n            value={this.state.name}\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.handlerOnChange}\n          />\n        </label>\n\n        <label className={s.inputTitle}> Number\n          <input className={s.inputField}\n            type=\"tel\"\n            value={this.state.number}\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={this.handlerOnChange}\n          />\n        </label>\n\n        <button className={s.addContactBtn} type='submit'>Add Contact</button>\n      </form>\n    )\n  }\n}\n\nexport default ContactsForm;","import s from './Contacts.module.css';\nimport PropTypes from 'prop-types';\n\nconst Contacts = ({ contactsArr, deleteContact }) => {\n\n  return (\n    <ul className={s.contactsList}>\n      {contactsArr.map(({ name, number, id}) =>\n        <li key={id} className={s.contactItem}>\n          <p className={s.contactsName}> {name}</p> : <p className={s.contactsNumber}>{number}</p>\n          <button className={s.delBtn} onClick={()=> deleteContact(id)} type=\"button\">Delete</button>\n        </li>)\n      \n      }\n    </ul>\n  )\n}\n\nContacts.propTypes = {\n  contactsArr: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    }).isRequired\n      \n  ).isRequired,\n  deleteContact: PropTypes.func.isRequired\n  \n}\n\nexport default Contacts;\n","import s from './FilterField.module.css';\nimport PropTypes from 'prop-types';\n\nconst FilterField = ({ value, onChange }) => {\n  return (\n    <label className={s.filterTitle}> Find contacts by name\n      <input className={s.filterInput} type=\"text\" value={value} onChange={onChange}/>\n    </label>\n  )\n}\n\nFilterField.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n}\n\nexport default FilterField;","import React, { Component } from \"react\";\nimport s from \"./App.module.css\";\nimport { v4 } from \"uuid\";\nimport \"./App.module.css\";\nimport ContactsForm from \"./components/ContactsForm\";\nimport Contacts from \"./components/Contacts\";\nimport FilterField from \"./components/FilterField\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const localContacts = JSON.parse(localStorage.getItem(\"contacts\"));\n\n    if (localContacts) {\n      this.setState({ contacts: localContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addNewContact = ({ name, number }) => {\n    const contact = {\n      id: v4(),\n      name: name,\n      number: number,\n    };\n\n    const contactsNames = this.state.contacts.map((item) =>\n      item.name.toLowerCase()\n    );\n\n    contactsNames.includes(contact.name.toLowerCase())\n      ? alert(`${contact.name} is already in contacts.`)\n      : this.setState((prevState) => ({\n          contacts: [contact, ...prevState.contacts],\n        }));\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.target.value });\n  };\n\n  getFilteredContacts = () => {\n    const NormalizeFilter = this.state.filter.toLowerCase();\n\n    return this.state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(NormalizeFilter)\n    );\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  render() {\n    const filteredContacts = this.getFilteredContacts();\n    return (\n      <div className={s.app}>\n        <h1 className={s.title}>Phonebook</h1>\n        <ContactsForm addNewContact={this.addNewContact} />\n        <h2 className={s.title}>Contacts</h2>\n        <FilterField value={this.state.filter} onChange={this.changeFilter} />\n        <Contacts\n          contactsArr={filteredContacts}\n          deleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"Contacts_contactItem__3y8Nt\",\"contactsName\":\"Contacts_contactsName__yY1hT\",\"contactsNumber\":\"Contacts_contactsNumber__3LTRn\",\"delBtn\":\"Contacts_delBtn__uEH9e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3LxK3\",\"title\":\"App_title__2c_aE\"};"],"sourceRoot":""}